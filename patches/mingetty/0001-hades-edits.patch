diff --git a/Makefile b/Makefile
index e66d843..0fa5932 100644
--- a/Makefile
+++ b/Makefile
@@ -2,13 +2,13 @@ DESTDIR=
 CC=gcc
 CFLAGS=-O2 -Wall -W -pipe -D_GNU_SOURCE
 MANDIR=/usr/share/man/man8
-SBINDIR=/sbin
+SBINDIR=/usr/sbin
 
 all:		mingetty
 
 install:	all
-		install -m 0755 mingetty $(DESTDIR)$(SBINDIR)
-		install -m 0644 mingetty.8 $(DESTDIR)$(MANDIR)
+		install -v -D -m 0755 -t $(DESTDIR)$(SBINDIR) mingetty 
+		install -v -D -m 0644 -t $(DESTDIR)$(MANDIR) mingetty.8
 
 mingetty:	mingetty.o
 
diff --git a/mingetty.c b/mingetty.c
index 084ebdf..74c9891 100644
--- a/mingetty.c
+++ b/mingetty.c
@@ -47,6 +47,9 @@ static char *tty;
 /* some information about this host */
 static struct utsname uts;
 /* the hostname */
+#ifndef MAXHOSTNAMELEN
+#define MAXHOSTNAMELEN 64
+#endif
 static char hn[MAXHOSTNAMELEN + 1];
 /* process and session ID of this program */
 static pid_t pid, sid;
@@ -138,11 +141,12 @@ static void open_tty (void)
 	int fd;
 
 	/* Set up new standard input. */
-	if (tty[0] == '/')
-		strcpy (buf, tty);
-	else {
+	if (tty[0] == '/') {
+		strncpy (buf, tty, sizeof(buf) - 1);
+		buf[sizeof(buf)-1] = '\0';
+	} else {
 		strcpy (buf, "/dev/");
-		strcat (buf, tty);
+		strncat (buf, tty, sizeof(buf) - strlen(buf) - 1);
 	}
 	/* There is always a race between this reset and the call to
 	   vhangup() that s.o. can use to get access to your tty. */
@@ -191,8 +195,10 @@ static void open_tty (void)
 
 	/* Write a reset string to the terminal. This is very linux-specific
 	   and should be checked for other systems. */
-	if (noclear == 0)
-		write (0, "\033c", 2);
+	if (noclear == 0) {
+		write (0, "\033[3;J", 5);   /* Clear scroll-back buffer, since Linux 3.0 */
+		write (0, "\033c", 2);      /* Reset */
+	}
 
 	sigaction (SIGHUP, &sa_old, NULL);
 }
@@ -216,8 +222,10 @@ static void output_special_char (unsigned char c)
 		printf ("%s", uts.machine);
 		break;
 	case 'o':
+#ifdef __gnu_linux__
 		printf ("%s", uts.domainname);
-		break;
+#endif
+        break;
 	case 'd':
 	case 't':
 		{
@@ -298,10 +306,21 @@ static void do_prompt (int showlogin)
 
 static char *get_logname (void)
 {
-	static char logname[40];
+	long int logname_size;
+	static char *logname = NULL;
+	char *logname_new;
 	char *bp;
 	unsigned char c;
 
+	logname_size = sysconf (_SC_LOGIN_NAME_MAX);
+	if (logname_size <= 0)
+		error ("Could not get maximal login name length");
+
+	logname_new = realloc (logname, logname_size);
+	if (!logname_new)
+		error ("Not enough memory");
+	logname = logname_new;
+
 	tcflush (0, TCIFLUSH);		/* flush pending input */
 	for (*logname = 0; *logname == 0;) {
 		do_prompt (1);
@@ -422,12 +441,20 @@ int main (int argc, char **argv)
 		while ((logname = get_logname ()) == 0)
 			/* do nothing */ ;
 
-	if (ch_root)
-		chroot (ch_root);
-	if (ch_dir)
-		chdir (ch_dir);
-	if (priority)
-		nice (priority);
+	if (ch_root) {
+		if (chroot (ch_root))
+			error ("chroot(): %s", strerror (errno));
+		if (chdir("/"))
+			error ("chdir(\"/\"): %s", strerror (errno));
+	}
+	if (ch_dir) {
+		if (chdir (ch_dir))
+			error ("chdir(): %s", strerror (errno));
+	}
+	if (priority) {
+		if (nice (priority))
+			error ("nice(): %s", strerror (errno));
+	}
 
 	execl (loginprog, loginprog, autologin? "-f" : "--", logname, NULL);
 	error ("%s: can't exec %s: %s", tty, loginprog, strerror (errno));
